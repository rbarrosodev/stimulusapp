{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// Visit The Stimulus Handbook for more details \n// https://stimulusjs.org/handbook/introduction\n// \n// This example controller works with specially annotated HTML like:\n//\n// <div data-controller=\"hello\">\n//   <h1 data-target=\"hello.output\"></h1>\n// </div>\nimport { Controller } from \"stimulus\";\n\nvar _default = /*#__PURE__*/function (_Controller) {\n  _inherits(_default, _Controller);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"connect\",\n    value: function connect() {\n      console.log(\"Hello from StimulusJS!\");\n    }\n  }, {\n    key: \"createSuccess\",\n    value: function createSuccess(event) {\n      var _event$detail = _slicedToArray(event.detail, 3),\n          _data = _event$detail[0],\n          _status = _event$detail[1],\n          xhr = _event$detail[2];\n\n      var tag = JSON.parse(xhr.response);\n      var tagLabel = document.createElement(\"label\");\n      var tagCheckbox = document.createElement(\"input\");\n      $(tagCheckbox).attr({\n        \"type\": \"checkbox\",\n        \"value\": tag.id,\n        \"name\": \"post[tag_ids][]\",\n        \"id\": \"post_tag_ids_\" + tag.id\n      });\n      $(tagLabel).attr({\n        \"for\": \"post_tag_ids_\" + tagId\n      });\n      tagLabel.innerHTML = tagName;\n      var newTag = document.createElement(\"div\");\n      newTag.innerHTML = xhr.response;\n      this.tagListTarget.append(tagCheckbox);\n      this.tagListTarget.append(tagLabel);\n      this.tagNameTarget.value = '';\n    }\n  }]);\n\n  return _default;\n}(Controller);\n\n_default.targets = ['tagList', 'tagName'];\nexport { _default as default };","map":{"version":3,"sources":["/Users/direitoreal/stimulusapp/app/javascript/controllers/tags_controller.js"],"names":["Controller","console","log","event","detail","_data","_status","xhr","tag","JSON","parse","response","tagLabel","document","createElement","tagCheckbox","$","attr","id","tagId","innerHTML","tagName","newTag","tagListTarget","append","tagNameTarget","value","targets"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,UAA3B;;;;;;;;;;;;;;;8BAKa;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;;;kCAEaC,K,EAAO;AAAA,yCACWA,KAAK,CAACC,MADjB;AAAA,UACZC,KADY;AAAA,UACLC,OADK;AAAA,UACIC,GADJ;;AAGnB,UAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,QAAf,CAAZ;AACA,UAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAjB;AACA,UAAMC,WAAW,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAApB;AACAE,MAAAA,CAAC,CAACD,WAAD,CAAD,CAAeE,IAAf,CAAoB;AAClB,gBAAQ,UADU;AAElB,iBAAST,GAAG,CAACU,EAFK;AAGlB,gBAAQ,iBAHU;AAIlB,cAAM,kBAAkBV,GAAG,CAACU;AAJV,OAApB;AAOAF,MAAAA,CAAC,CAACJ,QAAD,CAAD,CAAYK,IAAZ,CAAiB;AACf,eAAO,kBAAkBE;AADV,OAAjB;AAIAP,MAAAA,QAAQ,CAACQ,SAAT,GAAqBC,OAArB;AAEA,UAAMC,MAAM,GAAGT,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACAQ,MAAAA,MAAM,CAACF,SAAP,GAAmBb,GAAG,CAACI,QAAvB;AACA,WAAKY,aAAL,CAAmBC,MAAnB,CAA0BT,WAA1B;AACA,WAAKQ,aAAL,CAAmBC,MAAnB,CAA0BZ,QAA1B;AACA,WAAKa,aAAL,CAAmBC,KAAnB,GAA2B,EAA3B;AACD;;;;EA/B0B1B,U;;SACpB2B,O,GAAU,CAAC,SAAD,EAAY,SAAZ,C","sourcesContent":["// Visit The Stimulus Handbook for more details \n// https://stimulusjs.org/handbook/introduction\n// \n// This example controller works with specially annotated HTML like:\n//\n// <div data-controller=\"hello\">\n//   <h1 data-target=\"hello.output\"></h1>\n// </div>\n\nimport { Controller } from \"stimulus\"\n\nexport default class extends Controller {\n  static targets = ['tagList', 'tagName'];\n\n  connect () {\n    console.log(\"Hello from StimulusJS!\");\n  }\n\n  createSuccess(event) {\n    const [_data, _status, xhr] = event.detail;\n\n    const tag = JSON.parse(xhr.response);\n    const tagLabel = document.createElement(\"label\");\n    const tagCheckbox = document.createElement(\"input\");\n    $(tagCheckbox).attr({\n      \"type\": \"checkbox\",\n      \"value\": tag.id,\n      \"name\": \"post[tag_ids][]\",\n      \"id\": \"post_tag_ids_\" + tag.id\n    });\n    \n    $(tagLabel).attr({\n      \"for\": \"post_tag_ids_\" + tagId\n    });\n\n    tagLabel.innerHTML = tagName;\n\n    const newTag = document.createElement(\"div\");\n    newTag.innerHTML = xhr.response;\n    this.tagListTarget.append(tagCheckbox);\n    this.tagListTarget.append(tagLabel);\n    this.tagNameTarget.value = '';\n  }\n}"]},"metadata":{},"sourceType":"module"}